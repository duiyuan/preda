{
  "name": "preda",
  "displayName": "PREDA Language Preview Toolchain",
  "description": "Local development environment for the PREDA smart contract programming language",
  "version": "0.1.3",
  "engines": {
    "vscode": "^1.56.0"
  },
  "icon": "resource/images/logo.png",
  "categories": [
    "Testing",
    "Debuggers",
    "Programming Languages"
  ],
  "publisher": "PREDADevTeam",
  "activationEvents": [
    "onCommand:Preda.run",
    "onCommand:Preda.edit",
    "onCommand:Preda.compile",
    "onCommand:Preda.view",
    "onLanguage:prdts"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "Preda.run",
        "key": "ctrl+5",
        "mac": "cmd+5",
        "when": "editorTextFocus && resourceExtname == .prdts"
      },
      {
        "command": "Preda.edit",
        "key": "ctrl+6",
        "mac": "cmd+6",
        "when": "editorTextFocus && resourceExtname == .prdts"
      },
      {
        "command": "Preda.compile",
        "key": "ctrl+7",
        "mac": "cmd+7",
        "when": "editorTextFocus && resourceExtname == .prd"
      }
    ],
    "commands": [
      {
        "command": "Preda.run",
        "title": "PREDA: Run"
      },
      {
        "command": "Preda.edit",
        "title": "PREDA: Set Args"
      },
      {
        "command": "Preda.compile",
        "title": "PREDA: Compile"
      },
      {
        "command": "Preda.view",
        "title": "PREDA: View File"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "Preda.run",
          "group": "1_Preda",
          "when": "resourceExtname =~ /\\.prd(ts)?/"
        },
        {
          "command": "Preda.edit",
          "group": "1_Preda",
          "when": "resourceExtname =~ /\\.prd(ts)?/"
        },
        {
          "command": "Preda.compile",
          "group": "1_Preda",
          "when": "resourceExtname == .prd"
        },
        {
          "command": "Preda.view",
          "group": "1_Preda",
          "when": "resourceExtname == .html"
        }
      ],
      "editor/context": [
        {
          "command": "Preda.run",
          "group": "1_Preda",
          "when": "editorTextFocus && resourceExtname =~ /\\.prd(ts)?/"
        },
        {
          "command": "Preda.edit",
          "group": "1_Preda",
          "when": "editorTextFocus && resourceExtname =~ /\\.prd(ts)?/"
        },
        {
          "command": "Preda.compile",
          "group": "1_Preda",
          "when": "editorTextFocus && resourceExtname == .prd"
        },
        {
          "command": "Preda.view",
          "group": "1_Preda",
          "when": "editorTextFocus && resourceExtname == .html"
        }
      ]
    },
    "languages": [
      {
        "id": "predalog",
        "aliases": [
          "plog"
        ],
        "extensions": [
          ".log"
        ],
        "configuration": "./log.configuration.json",
        "mimetypes": [
          "log",
          "text/log",
          "text/x-log",
          "text/x-code-output",
          "x-code-output"
        ]
      },
      {
        "id": "preda",
        "aliases": [
          "preda"
        ],
        "extensions": [
          ".prd"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "prdts",
        "extensions": [
          ".prdts"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "preda",
        "scopeName": "source.preda",
        "path": "./syntaxes/preda.tmLanguage.json"
      },
      {
        "language": "predalog",
        "scopeName": "source.predalog",
        "path": "./syntaxes/log.tmLanguage.json"
      },
      {
        "language": "prdts",
        "scopeName": "source.prdts",
        "path": "./syntaxes/prdts.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "prdts",
        "path": "./snippets/prdts.code-snippets"
      }
    ],
    "configuration": {
      "title": "Preda",
      "properties": {
        "Preda.path": {
          "type": "string",
          "default": "",
          "description": "Run contracts with the local preda environment."
        },
        "Preda.isEnable": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the highlighting"
        },
        "Preda.isCaseSensitive": {
          "type": "boolean",
          "default": true,
          "description": "Specify whether the keywords are case sensitive or not"
        },
        "Preda.toggleURI": {
          "type": "boolean",
          "default": false,
          "description": "If the file path within the output channel is not clickable, set this to true to toggle the path patten between `<path>#<line>` and `<path>:<line>:<column>`"
        },
        "Preda.keywords": {
          "type": "array",
          "scope": "language-overridable",
          "markdownDescription": "An array of keywords, and their CSS to customise how they look. See all available properties in the [VSCode doc on DecorationRenderOptions](https://code.visualstudio.com/api/references/vscode-api#DecorationRenderOptions) section.",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "$comment": "text and regex are self defined. The selection of the other properties for autocompletion are the same as for Preda.keywords.",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Custom text to be highlighted."
                  },
                  "regex": {
                    "type": "object",
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "description": "The RegEx pattern to use for matching instead of the text value. REMEMBER to escape any backslashes in your regexp (using \\\\ instead of single backslash)."
                      }
                    }
                  },
                  "backgroundColor": {
                    "type": "string",
                    "description": "The text background color."
                  },
                  "border": {
                    "type": "string",
                    "description": "The border style for the highlight, as a CSS string."
                  },
                  "color": {
                    "type": "string",
                    "description": "The text color. "
                  },
                  "cursor": {
                    "type": "string",
                    "description": "The style for the cursor shown over the highlight, as a CSS property."
                  },
                  "isWholeLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, then the whole line is highlighted, not just the matching text."
                  },
                  "overviewRulerColor": {
                    "type": "string",
                    "description": "The color of the ruler mark on the scroll bar."
                  },
                  "diagnosticSeverity": {
                    "type": "string",
                    "default": "information",
                    "enum": [
                      "none",
                      "error",
                      "warning",
                      "information"
                    ],
                    "description": "If enabled, set the diagnostic severity in the problems view."
                  }
                },
                "required": [
                  "text"
                ]
              }
            ]
          },
          "default": [
            {
              "text": "TODO:",
              "color": "#fff",
              "backgroundColor": "#ffbd2a",
              "overviewRulerColor": "rgba(255,189,42,0.8)"
            },
            {
              "text": "FIXME:",
              "color": "#fff",
              "backgroundColor": "#f06292",
              "overviewRulerColor": "rgba(240,98,146,0.8)"
            }
          ]
        },
        "Preda.keywordsPattern": {
          "type": "string",
          "default": "",
          "description": "Specify keywords via RegExp instead of `Preda.keywords` one by one. NOTE that if this present, `Preda.keywords` will be ignored. REMEMBER to escapse any backslashes in your regexp (using \\\\ instead of single backslash)."
        },
        "Preda.defaultStyle": {
          "type": "object",
          "markdownDescription": "Default style for all customized keywords. See all available properties in the [VSCode doc on DecorationRenderOptions](https://code.visualstudio.com/api/references/vscode-api#DecorationRenderOptions) section.",
          "$comment": "The selection of properties for autocompletion are the same as for Preda.keywords.",
          "properties": {
            "backgroundColor": {
              "type": "string",
              "description": "The background color for the highlight."
            },
            "border": {
              "type": "string",
              "description": "The border style for the highlight, as a CSS string."
            },
            "color": {
              "type": "string",
              "markdownDescription": "The text color."
            },
            "cursor": {
              "type": "string",
              "description": "The style for the cursor shown over the highlight, as a CSS property."
            },
            "isWholeLine": {
              "type": "boolean",
              "default": false,
              "description": "If true, then the whole line is highlighted, not just the matching text."
            },
            "overviewRulerColor": {
              "type": "string",
              "description": "The color of the ruler mark on the scroll bar."
            }
          },
          "default": {
            "color": "#2196f3",
            "backgroundColor": "#ffeb3b"
          }
        },
        "Preda.include": {
          "description": "Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both performance and to avoid binary files.",
          "type": "array",
          "default": [
            "**/*.js",
            "**/*.jsx",
            "**/*.ts",
            "**/*.tsx",
            "**/*.html",
            "**/*.css",
            "**/*.scss",
            "**/*.php",
            "**/*.rb",
            "**/*.txt",
            "**/*.mdown",
            "**/*.md"
          ],
          "items": {
            "type": "string"
          },
          "scope": "resource"
        },
        "Preda.exclude": {
          "description": "Glob pattern that defines files and folders to exclude while listing annotations.",
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/bower_components/**",
            "**/dist/**",
            "**/build/**",
            "**/.vscode/**",
            "**/.vscode-test/**",
            "**/.github/**",
            "**/_output/**",
            "**/*.min.*",
            "**/*.map",
            "**/.next/**"
          ],
          "items": {
            "type": "string"
          },
          "scope": "resource"
        },
        "Preda.maxFilesForSearch": {
          "type": "number",
          "default": 5120,
          "description": "Max files for searching"
        },
        "Preda.enableDiagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Enable creating entries in the problems view."
        }
      }
    }
  },
  "license": "ISC",
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "watch": "npm-run-all -p watch:*",
    "watch:view": "cd web && cross-env NODE_ENV=development webpack --watch --mode development",
    "watch:extension": "tsc -watch -p ./",
    "compile": "npm-run-all compile:*",
    "compile:extension": "tsc -p ./",
    "compile:view": "cd web && cross-env NODE_ENV=production webpack --mode production",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/ejs": "^3.1.1",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/mustache": "^4.2.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.56.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "@vscode/test-electron": "^2.1.5",
    "cross-env": "^7.0.3",
    "css-loader": "^5.2.6",
    "eslint": "^8.20.0",
    "eslint-plugin-react-hooks": "^4.2.0",
    "glob": "^8.0.3",
    "less": "^4.1.1",
    "less-loader": "^8.1.1",
    "mocha": "^10.0.0",
    "node-fetch": "^3.2.10",
    "npm-run-all": "^4.1.5",
    "react-dev-utils": "^12.0.1",
    "rimraf": "^3.0.2",
    "style-loader": "^2.0.0",
    "terser-webpack-plugin": "^5.1.4",
    "typescript": "^4.7.4",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "@types/fs-extra": "^9.0.13",
    "ejs": "^3.1.8",
    "fs-extra": "^10.1.0",
    "mustache": "^4.2.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/duiyuan/preda"
  }
}
