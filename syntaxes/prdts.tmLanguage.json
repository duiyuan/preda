{
  "information_for_contributors": [
    "This file has been converted from https://github.com/jeff-hykin/better-cpp-syntax/blob/master/autogenerated/cpp.tmLanguage.json",
    "If you want to provide a fix or improvement, please create a pull request against the original repository.",
    "Once accepted there, we are happy to receive an update request."
  ],
  "version": "https://github.com/jeff-hykin/better-cpp-syntax/commit/1866de22c09781cbceacc2c98063f7bf77b1ca62",
  "name": "prdts",
  "scopeName": "source.prdts",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#quote"
    },
    {
      "include": "#operator"
    },
    {
      "include": "#filename"
    },
    {
      "include": "#declaration"
    },
    {
      "include": "#brackets"
    },
    {
      "include": "#call-function"
    }
  ],
  "repository": {
    "quote": {
      "patterns": [
        {
          "match": "\\\".*?\\\"",
          "name": "string.quoted.double.prdts"
        },
        {
          "match": "\\'.*?\\'",
          "name": "string.quoted.single.prdts"
        }
      ]
    },
    "brackets": {
      "patterns": [
        {
          "match": "\\$~count\\$",
          "name": "storage.type.prdts"
        }
      ]
    },
    "call-function": {
      "patterns": [
        {
          "match": "\\b([a-zA-Z](?:[a-zA-Z0-9]*))\\.([a-zA-Z0-9]+)\\b",
          "captures": {
            "1": {
              "name": "variable.other.object.access.prdts"
            },
            "2": {
              "name": "entity.name.function.prdts"
            }
          }
        },
        {
          "include": "#buildin-function"
        }
      ]
    },

    "filename": {
      "patterns": [
        {
          "include": "#contract-file"
        }
      ]
    },

    "contract-file": {
      "match": "\\w+\\.prd\\s",
      "name": "support.type.prdts"
    },

    "buildin-function": {
      "match": "(viz)|(^log)(?!\\.)",
      "name": "variable.other.object.access.prdts"
    },

    "declaration": {
      "patterns": [
        {
          "include": "#declare-number"
        },
        {
          "include": "#declare-keypair"
        }
      ]
    },

    "declare-keypair": {
      "match": "\\s?([a-zA-Z_]+)(?=:)",
      "name": "string.double.prdts"
    },

    "declare-number": {
      "patterns": [
        {
          "include": "#number-decimal"
        },
        {
          "include": "#number-hex"
        },
        {
          "include": "#number-float"
        }
      ]
    },
    "number-decimal": {
      "match": "\\b(\\d+(((u|i)(8|16|32|64)?)|ib)?)\\b",
      "name": "constant.numeric.decimal.prdts"
    },
    "number-hex": {
      "match": "\\b(0[xX][a-fA-F0-9]+)(((u|i)(8|16|32|64))|ib)?\\b",
      "name": "constant.numeric.hexadecimal.prdts"
    },
    "number-float": {
      "match": "\\b(\\d*[.]\\d+)(f(256|512|1024))\\b",
      "name": "constant.numeric.float.prdts"
    },

    "operator": {
      "patterns": [
        {
          "include": "#operator-logical"
        },
        {
          "include": "#operator-comparison"
        },
        {
          "include": "#operator-arithmetic"
        },
        {
          "include": "#operator-bitwise"
        },
        {
          "include": "#operator-assignment"
        }
      ]
    },
    "operator-logical": {
      "match": "(\\&\\&|\\|\\||\\?|\\:|\\!(?!=))",
      "name": "keyword.operator.logic.prdts"
    },
    "operator-comparison": {
      "match": "(==|\\!=|<(?!<)|<=|>(?!>)|>=)",
      "name": "keyword.operator.logic.prdts"
    },
    "operator-arithmetic": {
      "match": "(\\+{1,2}|\\-{1,2}|\\/|\\*|%)",
      "name": "keyword.operator.arithmetic.prdts"
    },
    "operator-bitwise": {
      "match": "(~|\\^|\\&|\\||<<|>>)",
      "name": "keyword.operator.binary.prdts"
    },
    "operator-assignment": {
      "match": "(=)",
      "name": "keyword.operator.assignment.prdts"
    },

    "inline_comment": {
      "match": "(\\/\\*)((?:[^\\*]++|\\*+(?!\\/))*+(\\*\\/))",
      "captures": {
        "1": {
          "name": "comment.block.prdts punctuation.definition.comment.begin.prdts"
        },
        "2": {
          "name": "comment.block.prdts"
        },
        "3": {
          "name": "comment.block.prdts punctuation.definition.comment.end.prdts"
        }
      }
    },
    "line_comment": {
      "begin": "\\s*+(\\/\\/)",
      "end": "(?<!\\\\)(?:(?=\\n)|(?<=^\\n|[^\\\\]\\n)(?=$))",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.prdts"
        }
      },
      "endCaptures": {},
      "name": "comment.line.double-slash.prdts",
      "patterns": [
        {
          "include": "#line_continuation_character"
        }
      ]
    },
    "line_continuation_character": {
      "match": "\\\\\\n",
      "name": "constant.character.escape.line-continuation.prdts"
    },
    "block_comment": {
      "begin": "\\s*+(\\/\\*)",
      "end": "\\*\\/",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.begin.prdts"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.comment.end.prdts"
        }
      },
      "name": "comment.block.prdts"
    },

    "invalid_comment_end": {
      "match": "\\*\\/",
      "name": "invalid.illegal.unexpected.punctuation.definition.comment.end.prdts"
    },
    "comma": {
      "match": ",",
      "name": "punctuation.separator.delimiter.comma.prdts"
    },
    "comma_in_template_argument": {
      "match": ",",
      "name": "punctuation.separator.delimiter.comma.template.argument.prdts"
    },
    "emacs_file_banner": {
      "match": "(?:(^(?:(?:\\s)+)?((\\/\\/)(?:(?:\\s)+)?((?:[#;\\/=*C~]+)++(?![#;\\/=*C~]))(?:(?:\\s)+)?.+(?:(?:\\s)+)?\\4(?:(?:\\s)+)?(?:\\n|$)))|(^(?:(?:\\s)+)?((\\/\\*)(?:(?:\\s)+)?((?:[#;\\/=*C~]+)++(?![#;\\/=*C~]))(?:(?:\\s)+)?.+(?:(?:\\s)+)?\\8(?:(?:\\s)+)?\\*\\/)))",
      "captures": {
        "1": {
          "name": "meta.toc-list.banner.double-slash.prdts"
        },
        "2": {
          "name": "comment.line.double-slash.prdts"
        },
        "3": {
          "name": "punctuation.definition.comment.prdts"
        },
        "4": {
          "name": "meta.banner.character.prdts"
        },
        "5": {
          "name": "meta.toc-list.banner.block.prdts"
        },
        "6": {
          "name": "comment.line.banner.prdts"
        },
        "7": {
          "name": "punctuation.definition.comment.prdts"
        },
        "8": {
          "name": "meta.banner.character.prdts"
        }
      }
    },
    "comments": {
      "patterns": [
        {
          "begin": "^(?:(?:\\s)+)?+(\\/\\/[!\\/]+)",
          "end": "(?<=\\n)(?<!\\\\\\n)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.documentation.prdts"
            }
          },
          "endCaptures": {},
          "name": "comment.line.double-slash.documentation.prdts",
          "patterns": [
            {
              "include": "#line_continuation_character"
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))(?:\\s)+(\\S+)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "name": "markup.italic.doxygen.prdts"
                }
              }
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@]b)(?:\\s)+(\\S+)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "name": "markup.bold.doxygen.prdts"
                }
              }
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))(?:\\s)+(\\S+)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "name": "markup.inline.raw.string.prdts"
                }
              }
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?(?:(?:\\s)+)?(?:in|out)(?:(?:\\s)+)?)+)\\])?(?:\\s)+(\\b\\w+\\b)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "patterns": [
                    {
                      "match": "in|out",
                      "name": "keyword.other.parameter.direction.$0.prdts"
                    }
                  ]
                },
                "3": {
                  "name": "variable.parameter.prdts"
                }
              }
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|throws|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|startuml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
              "name": "storage.type.class.gtkdoc.prdts"
            }
          ]
        },
        {
          "match": "(\\/\\*[!*]+(?=\\s))(.+)([!*]*\\*\\/)",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.begin.documentation.prdts"
            },
            "2": {
              "patterns": [
                {
                  "match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
                  "name": "storage.type.class.doxygen.prdts"
                },
                {
                  "match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))(?:\\s)+(\\S+)",
                  "captures": {
                    "1": {
                      "name": "storage.type.class.doxygen.prdts"
                    },
                    "2": {
                      "name": "markup.italic.doxygen.prdts"
                    }
                  }
                },
                {
                  "match": "((?<=[\\s*!\\/])[\\\\@]b)(?:\\s)+(\\S+)",
                  "captures": {
                    "1": {
                      "name": "storage.type.class.doxygen.prdts"
                    },
                    "2": {
                      "name": "markup.bold.doxygen.prdts"
                    }
                  }
                },
                {
                  "match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))(?:\\s)+(\\S+)",
                  "captures": {
                    "1": {
                      "name": "storage.type.class.doxygen.prdts"
                    },
                    "2": {
                      "name": "markup.inline.raw.string.prdts"
                    }
                  }
                },
                {
                  "match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
                  "name": "storage.type.class.doxygen.prdts"
                },
                {
                  "match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
                  "name": "storage.type.class.doxygen.prdts"
                },
                {
                  "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?(?:(?:\\s)+)?(?:in|out)(?:(?:\\s)+)?)+)\\])?(?:\\s)+(\\b\\w+\\b)",
                  "captures": {
                    "1": {
                      "name": "storage.type.class.doxygen.prdts"
                    },
                    "2": {
                      "patterns": [
                        {
                          "match": "in|out",
                          "name": "keyword.other.parameter.direction.$0.prdts"
                        }
                      ]
                    },
                    "3": {
                      "name": "variable.parameter.prdts"
                    }
                  }
                },
                {
                  "match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|throws|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
                  "name": "storage.type.class.doxygen.prdts"
                },
                {
                  "match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|startuml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
                  "name": "storage.type.class.doxygen.prdts"
                },
                {
                  "match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
                  "name": "storage.type.class.gtkdoc.prdts"
                }
              ]
            },
            "3": {
              "name": "punctuation.definition.comment.end.documentation.prdts"
            }
          },
          "name": "comment.block.documentation.prdts"
        },
        {
          "begin": "(?:(?:\\s)+)?+\\/\\*[!*]+(?:(?:(?:\\n)|$)|(?=\\s))",
          "end": "[!*]*\\*\\/",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.documentation.prdts"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.documentation.prdts"
            }
          },
          "name": "comment.block.documentation.prdts",
          "patterns": [
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))(?:\\s)+(\\S+)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "name": "markup.italic.doxygen.prdts"
                }
              }
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@]b)(?:\\s)+(\\S+)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "name": "markup.bold.doxygen.prdts"
                }
              }
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))(?:\\s)+(\\S+)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "name": "markup.inline.raw.string.prdts"
                }
              }
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?(?:(?:\\s)+)?(?:in|out)(?:(?:\\s)+)?)+)\\])?(?:\\s)+(\\b\\w+\\b)",
              "captures": {
                "1": {
                  "name": "storage.type.class.doxygen.prdts"
                },
                "2": {
                  "patterns": [
                    {
                      "match": "in|out",
                      "name": "keyword.other.parameter.direction.$0.prdts"
                    }
                  ]
                },
                "3": {
                  "name": "variable.parameter.prdts"
                }
              }
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|throws|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|startuml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
              "name": "storage.type.class.doxygen.prdts"
            },
            {
              "match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
              "name": "storage.type.class.gtkdoc.prdts"
            }
          ]
        },
        {
          "include": "#emacs_file_banner"
        },

        {
          "include": "#line_comment"
        }
      ]
    }
  }
}
